1. Node js
2. MonogDB
  -id, pwd
3. 비주얼코드
4. GitHub 에서 다운로드
5. Arduino

몽고 데이터
1. 유저(비밀번호-비크립트 60)
2. 온도(데이터)
3. 체널키(중복 체널 방지용)
4. 커뮤니티(커뮤니티 데이터, 삭제 변경 방지, 유저정보)

설치 및 Sever 실행 방법
1. 압축을 푼다. 
2. 비주얼 코드를 연다.  해당 파일을 불러온다.
3. Ctrl + ` 을 눌러서 터미널을 연다.
4. npm install 로 필요한 모듈들을 추가 해준다. ( 모듈은 package.json 에 있는 모듈을 추가한다.)
5. 설치 완료후 npm start 로 서버를 시작해준다.

조심해야 할것!!!!!
1. 서버를 시작후 코드를 바꿔서 저장을 하면 서버는 재 시작한다.
2. 단 재시작할때 해당 페이지에서 새로고침을 하면 오류가 난다. 이유는 Session 값에 유저 정보가 날아가기 때문
3. 그렇기 때문에 코드를 바꿔서 서버를 재시작할때에는 원래 있던 화면이 아닌
    로그인 화면(해당 host주소)로 돌아가서 시작해야 한다.
4. 서버가 정지했을때도 마찬가지로 위와 같은 방식으로 시작하면 다시 작동합니다.

순서
1. 로그인 화면에서 회원가입 후 로그인
2. 키확인 버튼으로 유저의 키 배정 받기
3. 채널키 확인 버튼으로 채널 생성 및 채널키 받기(데이터가 안들어가 있으므로 메인 화면에 출력은 안된다.)
4. Blockly 버튼으로 Blockly 들어가기
  - 블록 test 를 눌러서 원하는 블록 설정
  - WiFi 센서 (핫스팟 id, pwd 입력)
  - URL 데이터 보내기 (Host 입력 : cmd 창에 ipconfig로 IPv4 주소 값 넣기 )
		    (Port 입력 : 80)
		    (Key : 유저키)
		    (Channel : 채널키)
  - 센서 올리기 ( name : Field 이름 넣기)

5. Community 사용법
  - 계시물 작성 (마크다운 사용)
  - 미리보기 선택시 만들어지는 결과를 볼수 있음
  - 카드의 자세히 보기를 눌르면 내용물을 확인 및 편집 ( 편집 , 삭제는 작성자만 가능 )

6. Teachable 사용법
  - 고양이 강아지 구별
  - 고양이 사진 또는 강아지 사진을 올려 놓는다.
  - 시작하기 버튼 (해당 모델을 불러온다.)
  - 예측하기 (올려놓은 사진을 판별한다.)
